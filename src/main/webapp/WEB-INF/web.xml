<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns="http://java.sun.com/xml/ns/javaee" 
    xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
    id="WebApp_ID" version="3.0">
  <display-name>dorideng</display-name>
   <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>
          WEB-INF/classes/applicationContext.xml
      </param-value>
  </context-param> 
  <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 数据库连接池配置数据源 -->  
	<servlet>  
	    <servlet-name>ServletConfigurator</servlet-name>  
	    <servlet-class>org.logicalcobwebs.proxool.configuration.ServletConfigurator</servlet-class>  
	    <init-param>  
	        <param-name>xmlFile</param-name>  
	        <param-value>WEB-INF/classes/proxoolConf.xml</param-value>  
	    </init-param>  
	    <load-on-startup>1</load-on-startup>  
	</servlet>  
	
	<!-- 激活tomcat的defaultservlet来处理静态文件  在DispatcherServlet之前 有效-->
	 
	<!-- <servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.png</url-pattern>
	</servlet-mapping>	
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>  -->
	
	<!--spring mvc  拦截请求-->
   <servlet>
  	<servlet-name>springMVC</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>/WEB-INF/spring-mvc.xml</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <!--拦截所有请求  -->
  <servlet-mapping>
  	<servlet-name>springMVC</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
    <!--
    字符编码的过滤器 
  -->
  <!--spring 的encoding filter  -->
   <filter>
  	<filter-name>encodingfilter</filter-name>
  	<filter-class>com.bxs.server.filter.CharacterEncodingFilter</filter-class>
  	<init-param>
  	 <param-name>encoding</param-name>
  	 <param-value>utf-8</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>encodingfilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  <filter>  
  <filter-name>Set Character Encoding</filter-name>  
  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
  <init-param>  
  <param-name>encoding</param-name>  
  <param-value>utf8</param-value>  
  </init-param>  
</filter>  
 <filter-mapping>  
  <filter-name>Set Character Encoding</filter-name>  
  <url-pattern>/*</url-pattern>  
 </filter-mapping>  
 
 <filter>
 	<filter-name>LoginFilter</filter-name>
 	<filter-class>com.bxs.server.filter.LoginFilter</filter-class>
 <init-param>
 	<description>session的key</description>
 	<param-name>sessionKey</param-name>
 	<param-value>userInfo</param-value>
 </init-param>
 <init-param>
     <description>
         如果用户未登录（即在 session 中 key 为 sessionKey 的属性不存在或为空），则将请求重定向到该 url。
         该 url 不包含web应用的 ContextPath。
         如果不配置此参数，则在用户未登录系统的情况下，直接重定向到web应用的根路径（/）
     </description>
     <param-name>redirectUrl</param-name>
     <param-value>/server/pages/login/Login.jsp</param-value>
 </init-param>
 <init-param>
     <description>
         不需要进行拦截的 url 的正则表达式，即：如果当前请求的 url 的 servletPath 能匹配该正则表达式，则直接放行（即使未登录系统）。
         此参数的值一般为 loginServlet 和 registServlet 等。
         另外，参数 redirectUrl 的值不用包含在该正则表达式中，因为 redirectUrl 对应的 url 会被自动放行。
         还有一点需要说明的是，该参数的值不包含web应用的 ContextPath。
     </description>
     <param-name>excepUrlRegex</param-name>
     <!-- 不拦截 /servlets/loginServlet 和 /servlets/registServlet -->
     <param-value>/login/check.do</param-value>
 </init-param>
 </filter>
 <filter-mapping>
 	<filter-name>LoginFilter</filter-name>
 	<url-pattern>/production/*</url-pattern>
 	<url-pattern>/user/*</url-pattern>
 	<url-pattern>/rightMenu/*</url-pattern>
 	<!-- <url-pattern>/login/*</url-pattern> -->
 </filter-mapping>
  
  <!-- 错误跳转 -->
  <error-page>
  	<error-code>400</error-code>
  	<location>/server/pages/error.jsp</location>
  </error-page>
  <error-page>
  	<error-code>404</error-code>
  	<location>/server/pages/error.jsp</location>
  </error-page>
  <error-page>
  	<error-code>500</error-code>
  	<location>/server/pages/error.jsp</location>
  </error-page>
  <welcome-file-list>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>